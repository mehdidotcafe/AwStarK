name: test

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - uses: ./.github/workflows/actions/export-secrets-in-env
      with:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
    - name: Create test branch
      run: ./scripts/neon/create-test-branch.sh
    - run: npm install
    - uses: ./.github/workflows/actions/migrate-db
      with:
        DB_URL: "${{env.DB_PROTOCOL}}://${{env.DB_USER}}:${{env.DB_PASSWORD}}@${{env.DB_HOST}}:${{env.DB_PORT}}/${{env.DB_NAME}}"
        SHADOW_DB_URL: "${{env.DB_PROTOCOL}}://${{env.DB_USER}}:${{env.DB_PASSWORD}}@${{env.DB_HOST}}:${{env.DB_PORT}}/${{env.SHADOW_DB_NAME}}"
    - name: Run tests
      run: (npm install && npm test)
      env:
        CI: true
        DB_URL: "${{env.DB_PROTOCOL}}://${{env.DB_USER}}:${{env.DB_PASSWORD}}@${{env.DB_HOST}}:${{env.DB_PORT}}/${{env.DB_NAME}}"
        SHADOW_DB_URL: "${{env.DB_PROTOCOL}}://${{env.DB_USER}}:${{env.DB_PASSWORD}}@${{env.DB_HOST}}:${{env.DB_PORT}}/${{env.SHADOW_DB_NAME}}"
    - name: Delete test branch
      if: always()
      run: ./scripts/neon/delete-test-branch.sh
