AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

    Sample SAM Template for sam-app

Parameters:
  DbUrl:
    Type: String
    Description: Database URL

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Tracing: Active
    Runtime: nodejs18.x
    Architectures:
      - x86_64
    MemorySize: 128
    CodeUri: ./
    Environment:
      Variables:
        DB_URL: !Ref DbUrl

  Api:
    TracingEnabled: true
    # Cors:
    #   AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-requested-with'"
    #   AllowMethods: "'OPTIONS, POST, PUT, GET, DELETE, PATCH'"
    #   AllowOrigin: "'*'"

Resources:
  StatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: build/handlers/status.default
      Events:
        Status:
          Type: Api
          Properties:
            Path: /status
            Method: get
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Format: cjs
        Minify: true
        Target: "es2020"
        EntryPoints: 
          - src/handlers/status.ts
  ValidationGetFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: build/handlers/validation/get.default
      Events:
        Status:
          Type: Api
          Properties:
            Path: /validation
            Method: get
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Format: cjs
        Minify: true
        Target: "es2020"
        EntryPoints: 
          - src/handlers/validation/get.ts
  ValidationPostFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: build/handlers/validation/post.default
      Events:
        Status:
          Type: Api
          Properties:
            Path: /validation
            Method: post
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Format: cjs
        Minify: true
        Target: "es2020"
        EntryPoints: 
          - src/handlers/validation/post.ts
  UserGetFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: build/handlers/user/get.default
      Events:
        Status:
          Type: Api
          Properties:
            Path: /user
            Method: get
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Format: cjs
        Minify: true
        Target: "es2020"
        EntryPoints: 
          - src/handlers/user/get.ts
  UserPostFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: build/handlers/user/post.default
      Events:
        Status:
          Type: Api
          Properties:
            Path: /user
            Method: post
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Format: cjs
        Minify: true
        Target: "es2020"
        EntryPoints: 
          - src/handlers/user/post.ts



  Database:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      DBInstanceClass: db.t3.micro
      Engine: postgres
      MasterUsername: '{{resolve:ssm:DB_USER}}'
      MasterUserPassword: '{{resolve:ssm-secure:DB_PASSWORD}}'
      DBName: '{{resolve:ssm:DB_NAME}}'
  
  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Join:
        - ''
        - - ApplicationInsights-SAM-
          - Ref: AWS::StackName
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Fn::Join:
        - ''
        - - ApplicationInsights-SAM-
          - Ref: AWS::StackName
      AutoConfigurationEnabled: 'true'
    DependsOn: ApplicationResourceGroup
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  Api:
    Description: "awstark API"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
